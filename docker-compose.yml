version: "3"
services:
  sql:
    container_name: DB
    image: postgres
    restart: always
    volumes:
      - ./tmp/db:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: password
    networks:
      - nestoras
  simple-ecommerce:
    build: ./simple-ecommerce
    container_name: Simple-Ecommerce
    command: bash -c "rm -f tmp/pids/server.pid && bundle exec rails s -p 1149 -b '0.0.0.0'"
    environment:
      - DATABASE_URL=postgres://postgres@sql
    volumes:
      - ./simple-ecommerce:/app:cached
      - /app/node_modules
    ports:
      - 1149:1149
    depends_on:
      - sql
    networks:
      - nestoras
    links:
      - mailcatch
    stdin_open: true
    tty: true

  esscentials:
    build: ./esscentials
    container_name: esscentials
    command: bash -c "rm -f tmp/pids/server.pid && bundle exec rails s -p 1150 -b '0.0.0.0'"
    environment:
      - DATABASE_URL=postgres://postgres@sql
    volumes:
      - ./esscentials:/app:cached
      - /app/node_modules
    ports:
      - 1150:1150
    depends_on:
      - sql
    networks:
      - nestoras
    links:
      - mailcatch
    stdin_open: true
    tty: true

  mailcatch:
    container_name: Mailcatch
    image: schickling/mailcatcher
    ports:
      - 1026:1026
      - 1081:1081
    networks:
      - nestoras

  dberm:
    container_name: DBerm
    image: postgres
    restart: always
    volumes:
      - ./tmp/dberm:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: password
    networks:
      - nestoras
  erm:
    build: ./erm
    container_name: ERM
    command: bash -c "rm -f tmp/pids/server.pid && bundle exec rails s -p 1111 -b '0.0.0.0'"
    env_file: erm/.env
    environment:
      - DATABASE_URL=postgres://postgres@dberm
    volumes:
      - ./erm:/app:cached
      - /app/node_modules
    ports:
      - 1111:1111
    depends_on:
      - dberm
    networks:
      - nestoras
    links:
      - mailcatch
    stdin_open: true
    tty: true

volumes:
  database_data:
networks:
  nestoras:
    driver: bridge
